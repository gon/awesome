{
  "name": "grunt-connect-rewrite",
  "description": "Provides RewriteRules middleware for the grunt connect and express.",
  "version": "0.1.1",
  "homepage": "https://github.com/viart/grunt-connect-rewrite",
  "author": {
    "name": "Artem Vitiuk",
    "email": "artem@devart.in.ua"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:viart/grunt-connect-rewrite.git"
  },
  "bugs": {
    "url": "https://github.com/viart/grunt-connect-rewrite/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/viart/grunt-connect-rewrite/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "grunt-contrib-connect",
    "grunt-express",
    "modrewrite",
    "rewriterule",
    "rewrite",
    "route",
    "connect",
    "express"
  ],
  "readme": "# grunt-connect-rewrite\n\n> This plugin provides RewriteRules middleware for the Grunt Connect / Express.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-connect-rewrite --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-connect-rewrite');\n```\n\n## Adapting the \"connect\" task\n\n### Overview\n\n#### Rules Configuration\nIn your project's Gruntfile, add a section named `rules` to your existing connect definition.\nPlease note that unlike options, rules cannot be set per server, so the rules attribute must always\nbe nested directly under 'connect'.\n\n```js\ngrunt.initConfig({\n    connect: {\n        options: {\n            port: 9000,\n            hostname: 'localhost'\n        },\n        rules: {\n            '^/index_dev.html$': '/src/index.html',\n            '^/js/(.*)$': '/src/js/$1',\n            '^/css/(.*)$': '/public/css/$1'\n        }\n    }\n})\n```\n\nYou may also optionally read rules from a different grunt config, like so:\n\n```js\ngrunt.initConfig({\n    express: {\n        options: {\n            port: 9000\n        },\n        server: {\n            hostname: 'localhost'\n        },\n        rules: {\n            '^/index_dev.html$': '/src/index.html',\n            '^/js/(.*)$': '/src/js/$1',\n            '^/css/(.*)$': '/public/css/$1'\n        }\n    },\n    configureRewriteRules: {\n        options: {\n            rulesProvider: 'express.rules'\n        }\n    }\n}\n})\n```\n\n#### Adding the middleware\nInclude helper to use in the middleware (add this line to the top of the grunt file):\n```js\nvar rewriteRulesSnippet = require('grunt-connect-rewrite/lib/utils').rewriteRequest;\n```\n\nAdd the RewriteRules snippet to the connect option middleware hook\n```js\nconnect: {\n    development: {\n        options: {\n            middleware: function (connect) {\n                return [\n                    rewriteRulesSnippet, // RewriteRules support\n                    connect.static(require('path').resolve(options.base)) // mount filesystem\n                ];\n            }\n        }\n    }\n}\n```\n\n### Adding the \"configureRewriteRules\" task to the server task\nFor the server task, add the \"configureRewriteRules\" task before the \"connect\" task\n```js\ngrunt.registerTask('server', function (target) {\n    grunt.task.run([\n        'configureRewriteRules',\n        'connect:development'\n    ]);\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 2013.07.27 `v0.1.1` Add possibility to read settings from custom grunt config path\n* 2013.04.12 `v0.1.0` Initial Release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-connect-rewrite@0.1.1",
  "dist": {
    "shasum": "ffb4c4699098a381c5ce6a203d91bf2e957c0110"
  },
  "_from": "grunt-connect-rewrite@",
  "_resolved": "https://registry.npmjs.org/grunt-connect-rewrite/-/grunt-connect-rewrite-0.1.1.tgz"
}
